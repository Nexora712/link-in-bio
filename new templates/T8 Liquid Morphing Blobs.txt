<div class="liquid-template">
  <div class="blob-container">
    <div class="liquid-blob blob-1"></div>
    <div class="liquid-blob blob-2"></div>
    <div class="liquid-blob blob-3"></div>
    <div class="liquid-blob blob-4"></div>
  </div>
  
  <div class="content-wrapper">
    <header class="fluid-profile">
      <div class="avatar-liquid">
        <div class="liquid-frame">
          <img src="{{avatar_url}}" alt="{{user_name}}" class="avatar-image">
          <div class="liquid-overlay"></div>
        </div>
        <div class="ripple-effect">
          <div class="ripple r1"></div>
          <div class="ripple r2"></div>
          <div class="ripple r3"></div>
        </div>
      </div>
      <h1 class="fluid-name">{{user_name}}</h1>
      <p class="fluid-bio">{{user_bio}}</p>
    </header>
    
    <main class="morphing-links">
      {{#each links}}
      <div class="liquid-link" data-url="{{url}}">
        <div class="link-blob"></div>
        <div class="link-content">
          <div class="link-icon-wrapper">
            <span class="link-icon">{{icon}}</span>
            <div class="icon-glow"></div>
          </div>
          <span class="link-title">{{title}}</span>
          <div class="morph-indicator">
            <div class="morph-dot"></div>
            <div class="morph-dot"></div>
            <div class="morph-dot"></div>
          </div>
        </div>
        <div class="hover-blob"></div>
      </div>
      {{/each}}
    </main>
    
    <footer class="social-drops">
      <div class="drops-container">
        {{#each social_links}}
        <a href="{{url}}" class="social-drop">
          <div class="drop-surface">
            <span class="drop-icon">{{icon}}</span>
            <div class="surface-tension"></div>
          </div>
        </a>
        {{/each}}
      </div>
    </footer>
  </div>
</div>

<style>
.liquid-template {
  min-height: 100vh;
  background: radial-gradient(circle at 30% 20%, #667eea 0%, #764ba2 50%, #f093fb 100%);
  font-family: 'Inter', sans-serif;
  position: relative;
  overflow: hidden;
  color: #ffffff;
}

/* Animated liquid blobs */
.blob-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.liquid-blob {
  position: absolute;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(2px);
  animation: blob-morph 20s ease-in-out infinite;
}

.blob-1 {
  width: 300px;
  height: 300px;
  top: -150px;
  left: -100px;
  animation-delay: 0s;
}

.blob-2 {
  width: 200px;
  height: 200px;
  top: 30%;
  right: -80px;
  animation-delay: 5s;
}

.blob-3 {
  width: 250px;
  height: 250px;
  bottom: -100px;
  left: 20%;
  animation-delay: 10s;
}

.blob-4 {
  width: 180px;
  height: 180px;
  top: 60%;
  left: -50px;
  animation-delay: 15s;
}

@keyframes blob-morph {
  0%, 100% {
    border-radius: 50% 50% 50% 50%;
    transform: rotate(0deg) scale(1);
  }
  25% {
    border-radius: 60% 40% 60% 40%;
    transform: rotate(90deg) scale(1.1);
  }
  50% {
    border-radius: 40% 60% 40% 60%;
    transform: rotate(180deg) scale(0.9);
  }
  75% {
    border-radius: 70% 30% 70% 30%;
    transform: rotate(270deg) scale(1.05);
  }
}

.content-wrapper {
  position: relative;
  z-index: 10;
  max-width: 500px;
  margin: 0 auto;
  padding: 3rem 2rem;
}

/* Fluid profile section */
.fluid-profile {
  text-align: center;
  margin-bottom: 4rem;
}

.avatar-liquid {
  position: relative;
  display: inline-block;
  margin-bottom: 2rem;
}

.liquid-frame {
  position: relative;
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.2);
  padding: 8px;
  backdrop-filter: blur(10px);
  animation: liquid-pulse 4s ease-in-out infinite;
}

@keyframes liquid-pulse {
  0%, 100% {
    border-radius: 50%;
    transform: scale(1);
  }
  25% {
    border-radius: 60% 40% 60% 40%;
    transform: scale(1.02);
  }
  50% {
    border-radius: 40% 60% 40% 60%;
    transform: scale(0.98);
  }
  75% {
    border-radius: 70% 30% 70% 30%;
    transform: scale(1.01);
  }
}

.avatar-image {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  object-fit: cover;
}

.liquid-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.3) 0%, transparent 100%);
  border-radius: 50%;
  pointer-events: none;
}

.ripple-effect {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.ripple {
  position: absolute;
  border: 2px solid rgba(255, 255, 255, 0.6);
  border-radius: 50%;
  animation: ripple-expand 3s ease-out infinite;
}

.r1 { animation-delay: 0s; }
.r2 { animation-delay: 1s; }
.r3 { animation-delay: 2s; }

@keyframes ripple-expand {
  0% {
    width: 0;
    height: 0;
    opacity: 1;
    margin: 0;
  }
  100% {
    width: 200px;
    height: 200px;
    opacity: 0;
    margin: -100px;
  }
}

.fluid-name {
  font-size: 2.8rem;
  font-weight: 800;
  margin: 0 0 1rem 0;
  background: linear-gradient(45deg, #ffffff, #f093fb, #667eea);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
}

.fluid-bio {
  font-size: 1.2rem;
  color: rgba(255, 255, 255, 0.9);
  margin: 0;
  max-width: 350px;
  margin: 0 auto;
  line-height: 1.6;
}

/* Morphing links */
.morphing-links {
  margin-bottom: 3rem;
}

.liquid-link {
  position: relative;
  margin-bottom: 1.5rem;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.link-blob {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(10px);
  border-radius: 25px;
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1;
}

.liquid-link:hover .link-blob {
  border-radius: 50% 25% 50% 25%;
  background: rgba(255, 255, 255, 0.25);
  transform: scale(1.02);
}

.link-content {
  position: relative;
  z-index: 2;
  display: flex;
  align-items: center;
  padding: 1.8rem 2rem;
}

.link-icon-wrapper {
  position: relative;
  margin-right: 1.5rem;
}

.link-icon {
  font-size: 1.8rem;
  color: #ffffff;
  position: relative;
  z-index: 2;
}

.icon-glow {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
  border-radius: 50%;
  animation: glow-pulse 2s ease-in-out infinite;
}

@keyframes glow-pulse {
  0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.7; }
  50% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; }
}

.link-title {
  flex: 1;
  font-size: 1.2rem;
  font-weight: 600;
  color: #ffffff;
}

.morph-indicator {
  display: flex;
  gap: 4px;
  align-items: center;
}

.morph-dot {
  width: 8px;
  height: 8px;
  background: rgba(255, 255, 255, 0.6);
  border-radius: 50%;
  animation: morph-dot-dance 1.5s ease-in-out infinite;
}

.morph-dot:nth-child(1) { animation-delay: 0s; }
.morph-dot:nth-child(2) { animation-delay: 0.3s; }
.morph-dot:nth-child(3) { animation-delay: 0.6s; }

@keyframes morph-dot-dance {
  0%, 100% { transform: scale(1); opacity: 0.6; }
  50% { transform: scale(1.3); opacity: 1; }
}

.liquid-link:hover .morph-dot {
  animation-duration: 0.8s;
}

.hover-blob {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 0;
}

.liquid-link:hover .hover-blob {
  width: 100%;
  height: 100%;
  border-radius: 40% 60% 40% 60%;
}

/* Social drops */
.social-drops {
  text-align: center;
}

.drops-container {
  display: flex;
  justify-content: center;
  gap: 1.5rem;
  flex-wrap: wrap;
}

.social-drop {
  position: relative;
  text-decoration: none;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.drop-surface {
  position: relative;
  width: 70px;
  height: 70px;
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.4s ease;
  animation: drop-float 4s ease-in-out infinite;
}

.social-drop:nth-child(1) .drop-surface { animation-delay: 0s; }
.social-drop:nth-child(2) .drop-surface { animation-delay: 1s; }
.social-drop:nth-child(3) .drop-surface { animation-delay: 2s; }
.social-drop:nth-child(4) .drop-surface { animation-delay: 3s; }

@keyframes drop-float {
  0%, 100% {
    transform: translateY(0px);
    border-radius: 50%;
  }
  25% {
    transform: translateY(-8px);
    border-radius: 60% 40% 60% 40%;
  }
  50% {
    transform: translateY(-3px);
    border-radius: 40% 60% 40% 60%;
  }
  75% {
    transform: translateY(-12px);
    border-radius: 70% 30% 70% 30%;
  }
}

.social-drop:hover .drop-surface {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
  border-radius: 30% 70% 30% 70%;
}

.drop-icon {
  font-size: 1.8rem;
  color: #ffffff;
  position: relative;
  z-index: 2;
}

.surface-tension {
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  animation: tension-ripple 3s ease-in-out infinite;
}

@keyframes tension-ripple {
  0%, 100% { transform: scale(1); opacity: 0.7; }
  50% { transform: scale(1.05); opacity: 1; }
}

.social-drop:hover .surface-tension {
  animation-duration: 1s;
  border-color: rgba(255, 255, 255, 0.6);
}
</style>

<script>
document.querySelectorAll('.liquid-link').forEach(link => {
  link.addEventListener('click', function() {
    const url = this.dataset.url;
    if (url) {
      // Liquid splash animation
      this.style.transform = 'scale(0.95)';
      setTimeout(() => {
        this.style.transform = 'scale(1)';
        window.open(url, '_blank');
      }, 150);
    }
  });
  
  // Add mouse move effect for liquid distortion
  link.addEventListener('mousemove', function(e) {
    const rect = this.getBoundingClientRect();
    const x = ((e.clientX - rect.left) / rect.width) * 100;
    const y = ((e.clientY - rect.top) / rect.height) * 100;
    
    const blob = this.querySelector('.link-blob');
    blob.style.background = `radial-gradient(circle at ${x}% ${y}%, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.15) 100%)`;
  });
  
  link.addEventListener('mouseleave', function() {
    const blob = this.querySelector('.link-blob');
    blob.style.background = 'rgba(255, 255, 255, 0.15)';
  });
});
</script>
